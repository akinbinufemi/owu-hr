version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: owu-hrms-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: owu_palace_hrms
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "127.0.0.1:5432:5432"  # Only bind to localhost
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - owu-hrms-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: owu-hrms-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD}@postgres:5432/owu_palace_hrms?schema=public
      JWT_SECRET: ${JWT_SECRET}
      FILE_ENCRYPTION_KEY: ${FILE_ENCRYPTION_KEY}
      PORT: 5000
      FRONTEND_URL: ${FRONTEND_URL}
      BCRYPT_ROUNDS: 12
      MAX_FILE_SIZE: 10485760
    ports:
      - "127.0.0.1:5000:5000"  # Only bind to localhost
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./backups:/app/backups
      - ./logs:/app/logs
    networks:
      - owu-hrms-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Production Build)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
    container_name: owu-hrms-frontend-prod
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:80"  # Only bind to localhost
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - owu-hrms-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: owu-hrms-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - owu-hrms-network

volumes:
  postgres_data:

networks:
  owu-hrms-network:
    driver: bridge